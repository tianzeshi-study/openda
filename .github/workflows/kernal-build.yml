name: kernel-build

on:
  push:
    branches:
      - main
      - master
      - dev
      - kernel 
    tags:
      - '*'
  pull_request:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: windows-latest
            target: x86
          # - runner: windows-latest
            # target: x64
    steps:
      - uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.x
          architecture: ${{ matrix.platform.target }}

      - name: Install maturin and build wheels
        run: |
          cd kernel
          pip install maturin
          maturin build --release --out dist --find-interpreter --target i686-pc-windows-msvc
          # if ($env:matrix_platform_target -eq 'x86') {
            # maturin build --release --out dist --find-interpreter --target i686-pc-windows-msvc
          # } else {
            # maturin build --release --out dist --find-interpreter --target x86_64-pc-windows-msvc
          # }
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-windows-${{ matrix.platform.target }}
          path: kernel/dist

      - name: Install Visual Studio
        uses: microsoft/setup-msbuild@v2
        with:
          vs-version: 'latest'  # 或指定特定版本，例如 '16.0'

      - name: Configure build for msvc
        uses: ilammy/msvc-dev-cmd@v1
        with:
          uwp : true
          spectre : true 

          toolset: 14.41.34120
          arch: x86
          # toolset: 14.11
          # arch: amd64
      - name: Cache SCons build directory
        uses: actions/cache@v4
        with:
          path: |
            build/
            # source/
          key: ${{ runner.os }}-scons-build-${{ hashFiles('**/SConstruct') }}-${{ hashFiles('**/SConscript') }}-${{ hashFiles('**/*.py') }}-${{ hashFiles('**/*.cpp') }}
          restore-keys: |
            ${{ runner.os }}-scons-build-${{ hashFiles('**/SConstruct') }}-${{ hashFiles('**/SConscript') }}-${{ hashFiles('**/*.py') }}-${{ hashFiles('**/*.cpp') }}


      - name: Cache python dependency directory
        uses: actions/cache@v4
        with:
          path: .venv/
          key: ${{ runner.os }}-python-venv-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-python-venv-


      - name: Run tests  prepare 
        run: |
          .\venvUtils\ensureAndActivate.bat
          py -3.11-32 -m pip install   kernel\dist\kernel-0.1.0-cp311-none-win32.whl --target source 
          .\SCons.bat -j4 tests
          .\SCons.bat -j4 source
      - name: run unit test
        run: |
          .\rununittests.bat

      - name: Run system test NVDA
        continue-on-error: true
        run: |
          .\runsystemtests.bat --include NVDA --exclude excluded_from_build


      - name: Upload output
        uses: actions/upload-artifact@v4
        with:
          name: TestLog
          path: |
            testOutput\system
            testOutput\unit

