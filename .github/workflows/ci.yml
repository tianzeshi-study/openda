name: CI

on:
  push:
    branches:
      - main
      - master
      - ci
  pull_request:

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # - name: Install Visual Studio
        # uses: microsoft/setup-msbuild@v1
        # with:
          # vs-version: 'latest'  # 或指定特定版本，例如 '16.0'
          # components: |
            # desktop-development
            # universal-application-platform-development

      - name: Install Visual Studio components
        run: |
          # $vsInstaller = "C:\ProgramData\Microsoft\VisualStudio\Installer\vs_installer.exe"
          $vsInstaller = "C:\Program Files (x86)\Microsoft Visual Studio\Installer\vs_installer.exe"
          & $vsInstaller --add "Microsoft.VisualStudio.Workload.NativeDesktop" --add "Microsoft.VisualStudio.Component.Windows11SDK.22621" --add "Microsoft.VisualStudio.Component.VC.Llvm.ClangToolset" --add "Microsoft.VisualStudio.Component.VC.Llvm.Clang" --add "Microsoft.VisualStudio.Component.VC.Tools.x86.x64" --add "Microsoft.VisualStudio.Component.VC.Tools.ARM64EC" --add "Microsoft.VisualStudio.Component.VC.Tools.ARM64" --add "Microsoft.VisualStudio.Component.VC.ATL" --add "Microsoft.VisualStudio.Component.VC.ATL.ARM64" --add Microsoft.VisualStudio.Workload.ManagedDesktop --add Microsoft.VisualStudio.Workload.Universal --add Microsoft.VisualStudio.Component.VC.Runtimes --includeRecommended --quiet --wait
          # vs_installer.exe  --add Microsoft.VisualStudio.Workload.ManagedDesktop --add Microsoft.VisualStudio.Workload.Universal --includeRecommended --quiet --wait

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.11.x'  # 指定 3.11 的次版本

      - name: Install Visual Studio components
        run: |
          .\install_visual_studio_22.ps1
          # choco install visualstudio2022community --version=17.0.0 --params "/IncludeRecommended"
          # refreshenv

      - name: Install dependencies
        run: |
          .\venvUtils\ensureAndActivate.bat
          # pip install -r requirements.txt
          pip install scons

      - name: Check Visual Studio Installation
        run: |
          # 使用 vswhere 检查 Visual Studio 版本
          if (Test-Path "C:\Program Files (x86)\Microsoft Visual Studio\Installer\vswhere.exe") {
            & "C:\Program Files (x86)\Microsoft Visual Studio\Installer\vswhere.exe" -products * -requires Microsoft.Component.MSBuild -property installationPath
          } else {
            Write-Host "Visual Studio is not installed."
            exit 1
          }

      # - name: List Visual Studio Components
        # run: |
          # & "C:\Program Files (x86)\Microsoft Visual Studio\Installer\vswhere.exe" -products * -property installationPath | ForEach-Object {
            # & "$_\Common7\IDE\devenv.exe" /log
            # Get-Content "$_\Common7\IDE\ActivityLog.xml" | Select-String "Component"
          # }
      - name: Run SCons build
        run: |
          $vsInstaller = "C:\Program Files (x86)\Microsoft Visual Studio\Installer\vs_installer.exe"
          & $vsInstaller --add "Microsoft.VisualStudio.Workload.NativeDesktop" --add "Microsoft.VisualStudio.Component.Windows11SDK.22621" --add "Microsoft.VisualStudio.Component.VC.Llvm.ClangToolset" --add "Microsoft.VisualStudio.Component.VC.Llvm.Clang" --add "Microsoft.VisualStudio.Component.VC.Tools.x86.x64" --add "Microsoft.VisualStudio.Component.VC.Tools.ARM64EC" --add "Microsoft.VisualStudio.Component.VC.Tools.ARM64" --add "Microsoft.VisualStudio.Component.VC.ATL" --add "Microsoft.VisualStudio.Component.VC.ATL.ARM64" --add Microsoft.VisualStudio.Workload.ManagedDesktop --add Microsoft.VisualStudio.Workload.Universal --add Microsoft.VisualStudio.Component.VC.Runtimes --includeRecommended --wait
          # & $vsInstaller --add "Microsoft.VisualStudio.Workload.NativeDesktop" --add "Microsoft.VisualStudio.Component.Windows11SDK.22621" --add "Microsoft.VisualStudio.Component.VC.Llvm.ClangToolset" --add "Microsoft.VisualStudio.Component.VC.Llvm.Clang" --add "Microsoft.VisualStudio.Component.VC.Tools.x86.x64" --add "Microsoft.VisualStudio.Component.VC.Tools.ARM64EC" --add "Microsoft.VisualStudio.Component.VC.Tools.ARM64" --add "Microsoft.VisualStudio.Component.VC.ATL" --add "Microsoft.VisualStudio.Component.VC.ATL.ARM64" --add Microsoft.VisualStudio.Workload.ManagedDesktop --add Microsoft.VisualStudio.Workload.Universal --add Microsoft.VisualStudio.Component.VC.Runtimes --includeRecommended --quiet --wait
          .\scons.bat
          .\scons.bat   source
          .\scons.bat  dist
          .\scons\bat   launcher

      - name: Output build artifacts
        run: |
          echo "Artifacts generated:"
          dir  # 列出生成的产物
